<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:pc="http://schemas.microsoft.com/prototyping/2010/controls" 
    mc:Ignorable="d" 
    x:Class="AnimeBox.MainWindow"
        Title="MainWindow"
    WindowStartupLocation="CenterScreen" 
    WindowStyle="None" 
    MouseDown="Window_MouseDown" 
    ResizeMode="NoResize" 
    Closing="Window_Closing" 
    Loaded="Window_Loaded" 
    Icon="tubiao.jpg" 
    x:Name="mainmusicbox" 
    Height="700" Width="1080" 
    Background="{x:Null}" 
    Foreground="{x:Null}">
    
	<Window.Resources>
    
        <Style x:Key="back" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="#00A32121">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon1">
												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
												<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon1">
												<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ed:RegularPolygon HorizontalAlignment="Left" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
								<ed:RegularPolygon.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="270"/>
										<TranslateTransform X="30.5"/>
									</TransformGroup>
								</ed:RegularPolygon.RenderTransform>
							</ed:RegularPolygon>
							<ed:RegularPolygon HorizontalAlignment="Right" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
								<ed:RegularPolygon.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="270"/>
										<TranslateTransform X="-30.5"/>
									</TransformGroup>
								</ed:RegularPolygon.RenderTransform>
							</ed:RegularPolygon>
        
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<ed:RegularPolygon x:Name="regularPolygon" HorizontalAlignment="Left" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
								<ed:RegularPolygon.Effect>
									<BlurEffect/>
								</ed:RegularPolygon.Effect>
								<ed:RegularPolygon.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="270"/>
										<TranslateTransform X="30.5"/>
									</TransformGroup>
								</ed:RegularPolygon.RenderTransform>
							</ed:RegularPolygon>
							<ed:RegularPolygon x:Name="regularPolygon1" HorizontalAlignment="Right" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
								<ed:RegularPolygon.Effect>
									<BlurEffect/>
								</ed:RegularPolygon.Effect>
								<ed:RegularPolygon.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="270"/>
										<TranslateTransform X="-30.5"/>
									</TransformGroup>
								</ed:RegularPolygon.RenderTransform>
							</ed:RegularPolygon>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnclose" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="#00DA7A7A">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ed:RegularPolygon InnerRadius="0.47211" PointCount="4" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="4" RenderTransformOrigin="0.5,0.5">
								<ed:RegularPolygon.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="45"/>
										<TranslateTransform/>
									</TransformGroup>
								</ed:RegularPolygon.RenderTransform>
							</ed:RegularPolygon>
        
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<ed:RegularPolygon x:Name="regularPolygon" InnerRadius="0.47211" PointCount="4" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="4" RenderTransformOrigin="0.5,0.5">
								<ed:RegularPolygon.Effect>
									<BlurEffect/>
								</ed:RegularPolygon.Effect>
								<ed:RegularPolygon.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="45"/>
										<TranslateTransform/>
									</TransformGroup>
								</ed:RegularPolygon.RenderTransform>
							</ed:RegularPolygon>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
						<Grid>
							<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Microsoft_Windows_Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
								<Thumb.Style>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="Width" Value="8"/>
										<Setter Property="Background" Value="Transparent"/>
										<Setter Property="Cursor" Value="SizeWE"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
         
								</Thumb.Style>
							</Thumb>
							<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
								<Thumb.Style>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="Width" Value="8"/>
										<Setter Property="Background" Value="Transparent"/>
										<Setter Property="Cursor" Value="SizeWE"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
         
								</Thumb.Style>
							</Thumb>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Background" Value="#FF93D6D6"/>
			<Setter Property="Foreground" Value="#FF606060"/>
		</Style>
		<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
							<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderBrush" Value="#FF688CAF"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGrid}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
								<ScrollViewer.Template>
									<ControlTemplate TargetType="{x:Type ScrollViewer}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="*"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
											<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
											<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
											<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
											<Grid Grid.Column="1" Grid.Row="2">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
											</Grid>
										</Grid>
									</ControlTemplate>
								</ScrollViewer.Template>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsGrouping" Value="true">
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
			<Setter Property="ValidationErrorTemplate">
				<Setter.Value>
					<ControlTemplate>
						<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridRow}">
						<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#00000000" SnapsToDevicePixels="True">
							<SelectiveScrollingGrid>
								<SelectiveScrollingGrid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</SelectiveScrollingGrid.ColumnDefinitions>
								<SelectiveScrollingGrid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</SelectiveScrollingGrid.RowDefinitions>
								<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
								<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
							</SelectiveScrollingGrid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid>
							<Grid x:Name="GridRoot">
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="18"/>
									<RowDefinition Height="0.00001*"/>
									<RowDefinition MaxHeight="18"/>
								</Grid.RowDefinitions>

								<Grid>
									<RepeatButton x:Name="DecreaseRepeat" Style="{StaticResource RepeatButton-Sketch}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Command="ScrollBar.LineUpCommand" FocusVisualStyle="{DynamicResource FocusControl-Sketch}"/>
									<!-- 一个小三角形 -->
								</Grid>

						<!-- Track 是一种特殊的布局容器，可调整用于在其一侧执行跳转滚动的 Thumb 和 RepeatButton 的大小 -->
								<Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
									<Track.Thumb>
										<Thumb Style="{StaticResource Thumb-Sketch}"  Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Height="Auto" Width="Auto"/>
									</Track.Thumb>
									<Track.IncreaseRepeatButton>
										<RepeatButton x:Name="PageUp" Style="{StaticResource ScrollRepeatButton-Sketch}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Command="ScrollBar.PageDownCommand" FocusVisualStyle="{DynamicResource FocusControl-Sketch}"/>
									</Track.IncreaseRepeatButton>
									<Track.DecreaseRepeatButton>
										<RepeatButton x:Name="PageDown" Style="{StaticResource ScrollRepeatButton-Sketch}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Command="ScrollBar.PageUpCommand" FocusVisualStyle="{DynamicResource FocusControl-Sketch}"/>
									</Track.DecreaseRepeatButton>
								</Track>


								<Grid Grid.Row="2">
									<RepeatButton  x:Name="IncreaseRepeat" Style="{StaticResource RepeatButton-Sketch}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Command="ScrollBar.LineDownCommand" RenderTransformOrigin="0.5,0.5" FocusVisualStyle="{DynamicResource FocusControl-Sketch}">
										<RepeatButton.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleX="1" ScaleY="-1"/>
												<SkewTransform AngleX="0" AngleY="0"/>
												<RotateTransform Angle="0"/>
												<TranslateTransform X="0" Y="0"/>
											</TransformGroup>
										</RepeatButton.RenderTransform>
									</RepeatButton>
									<!-- 一个小三角形 -->
								</Grid>
								<pc:SketchRectangleUC HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Foreground="{TemplateBinding Foreground}" Grid.ColumnSpan="1" Grid.RowSpan="3" BorderBrush="{TemplateBinding BorderBrush}" StrokeWidth="2" Background="{x:Null}" Margin="0,2.667,0,-2.667"/>
							</Grid>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarStyle3" TargetType="{x:Type ScrollBar}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid>
							<ScrollBar/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="btnsongscount02" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="#00992121">
							<Label Content="23首" Foreground="White" FontSize="16"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Label Content="23首" Foreground="White" FontSize="16">
								<Label.Effect>
									<BlurEffect/>
								</Label.Effect>
							</Label>
							<Label Content="23首" Foreground="White" FontSize="16"/>
							<Label Content="23首" Foreground="White" FontSize="16"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
    
        <Grid>
        <Image Source="Images/1.jpg" Stretch="UniformToFill" x:Name="background" Margin="0,-2,0,0" />
        <Border BorderBrush="#FF93D6D6" BorderThickness="2" Margin="0,-1.997,0,0" >
    		<Border.Effect>
    			<BlurEffect Radius="12"/>
    		</Border.Effect>
            <Border BorderBrush="#FF93D6D6" BorderThickness="2" Margin="0,0,-4,-4" >
        		<Border.Effect>
        			<BlurEffect Radius="12"/>
        		</Border.Effect>
        		<Border BorderBrush="#FF93D6D6" BorderThickness="2" Margin="-2">
        			<Border.Background>
        				<ImageBrush/>
        			</Border.Background>
        			<Border.Effect>
        				<BlurEffect Radius="12" />
        			</Border.Effect>
        		</Border>
        	</Border>
        </Border>
        <Grid Height="24.247" VerticalAlignment="Top" x:Name="wingrid">
        	<Button ToolTip="最小化" Content="" HorizontalAlignment="Right" Height="15.5" Margin="0,3.085,45.969,0" Style="{DynamicResource btnmin}" VerticalAlignment="Top" Width="20.042" Background="#FF93D6D6" x:Name="btnmin" Click="btnmin_Click" />
        	<Button ToolTip="关闭" Content="" HorizontalAlignment="Right" Height="15.5" Margin="0,3.085,5.095,0" Style="{DynamicResource btnclose}" VerticalAlignment="Top" Width="15.5" x:Name="btnclose" Click="btnclose_Click">
        		<Button.Background>
        			<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        				<GradientStop Color="#FFF3F3F3" Offset="0"/>
        				<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
        				<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
        				<GradientStop Color="#00CDCDCD" Offset="1"/>
        			</LinearGradientBrush>
        		</Button.Background>
        	</Button>
        	<Button ToolTip="背景设置" Content="Button" HorizontalAlignment="Right" Height="24.2" Margin="0,-0.716,77.967,0" Style="{DynamicResource btnimage}" VerticalAlignment="Top" Width="20.2" x:Name="btnbackground" Click="btnbackground_Click" />
        	<MediaElement LoadedBehavior="Manual" Height="57" HorizontalAlignment="Right" Margin="0,0,966,-33" x:Name="media" VerticalAlignment="Bottom" Width="92" MediaOpened="media_MediaOpened" MediaEnded="media_MediaEnded" Visibility="Hidden" />
        	<Button ToolTip="Mini模式" Content="Button" HorizontalAlignment="Right" Margin="0,3.085,24.595,3.787" Style="{DynamicResource btnopenmini}" Width="17.374" x:Name="btnopenmini" />
        	<Label Content="动漫音乐盒" Style="{DynamicResource Labelcount}" FontSize="12" HorizontalAlignment="Left" Width="103.56" Margin="8,3.085,0,4.915"/>
        </Grid>
        <Grid x:Name="g1" Width="340.922" HorizontalAlignment="Left" Margin="14.474,89.125,0,125.872">
           
        	<ListBox Style="{DynamicResource ListBox-Sketch}" Background="#3F93D6D6" Foreground="#FF93D6D6" x:Name="list01">
        		<ListBox.Effect>
        			<BlurEffect Radius="20"/>
        		</ListBox.Effect>
        	</ListBox>
        	<ListBox SelectedValuePath="Source" DisplayMemberPath="Name" Height="424.543" HorizontalAlignment="Left" Margin="8,8,0,0" x:Name="listsongs" VerticalAlignment="Top" Width="324.925" Background="#00000000" Foreground="#FF606060" FontSize="16" BorderBrush="#00828790" MouseDoubleClick="listsongs_MouseDoubleClick" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Hidden" SelectedIndex="0" SelectionChanged="listsongs_SelectionChanged" />
        	<Button ToolTip="添加歌曲" Content="" HorizontalAlignment="Left" Height="36.5" Margin="32.417,0,0,10.626" Style="{DynamicResource add}" VerticalAlignment="Bottom" Width="36.5" x:Name="btnadd" Click="btnadd_Click" />
            <Button ToolTip="清空所有" HorizontalAlignment="Right" Height="36.5" Margin="0,0,32.589,10.626" Style="{DynamicResource btndelete}" VerticalAlignment="Bottom" Width="36.5" x:Name="btnclear" Click="btnclear_Click" />
            <Button ToolTip="删除该项" Content="Button" Height="36.5" Margin="153.833,0,150.589,10.626" Style="{DynamicResource btnclear}" VerticalAlignment="Bottom" x:Name="btndelete" Click="btndelete_Click" />
        </Grid>
    	<Grid Margin="0,46.003,65.625,134.997" HorizontalAlignment="Right" Width="1010.276" x:Name="mysongs" Visibility="Hidden">
    		<Rectangle Fill="#A693D6D6" Stroke="#FF93D6D6" StrokeThickness="0" Margin="14.5,0,-14.5,0">
    			<Rectangle.Effect>
    				<BlurEffect Radius="80"/>
    			</Rectangle.Effect>
    		</Rectangle>
            <DataGrid   Margin="17.065,43.122,2.25,19" Background="#00F0F0F0" x:Name="datasongs" CanUserAddRows="False" AutoGenerateColumns="False" EnableColumnVirtualization="True" Style="{DynamicResource DataGridStyle}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle2}" FontSize="14.667" RowStyle="{DynamicResource DataGridRowStyle2}" RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}" BorderBrush="{x:Null}" Foreground="#FF606060" GridLinesVisibility="None" IsReadOnly="True" MouseDoubleClick="datasongs_MouseDoubleClick" HorizontalScrollBarVisibility="Hidden" MaxColumnWidth="1000" MinColumnWidth="50" IsSynchronizedWithCurrentItem="True" HeadersVisibility="Column" CanUserReorderColumns="False" SelectionChanged="datasongs_SelectionChanged">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="立刻播放" Click="btngo_Click" />
                        <MenuItem Header="添加到CD"/>
                        <MenuItem Header="删除" Click="btndelete_Click" />
                        <MenuItem Header="删除全部" Click="btnclear_Click" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.DragIndicatorStyle>
            		<Style TargetType="{x:Type DataGridColumnHeader}">
            			<Setter Property="VerticalContentAlignment" Value="Center"/>
            			<Setter Property="Template">
            				<Setter.Value>
            					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
            						<Grid>
            							<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
            								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            							</Microsoft_Windows_Themes:DataGridHeaderBorder>
            							<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
            							<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
            						</Grid>
            					</ControlTemplate>
            				</Setter.Value>
            			</Setter>
            		</Style>
         
            	</DataGrid.DragIndicatorStyle>
            	<DataGrid.ItemsPanel>
            		<ItemsPanelTemplate>
            			<DataGridRowsPresenter x:Name="PART_RowsPresenter" IsItemsHost="True"/>
            		</ItemsPanelTemplate>
         
            	</DataGrid.ItemsPanel>
            	<DataGrid.DropLocationIndicatorStyle>
            		<Style TargetType="{x:Type DataGrid}">
            			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            			<Setter Property="BorderBrush" Value="#FF688CAF"/>
            			<Setter Property="BorderThickness" Value="1"/>
            			<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            			<Setter Property="Template">
            				<Setter.Value>
            					<ControlTemplate TargetType="{x:Type DataGrid}">
            						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            							<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FFC04545">
            								<ScrollViewer.Template>
            									<ControlTemplate TargetType="{x:Type ScrollViewer}">
            										<Grid>
            											<Grid.ColumnDefinitions>
            												<ColumnDefinition Width="Auto"/>
            												<ColumnDefinition Width="*"/>
            												<ColumnDefinition Width="Auto"/>
            											</Grid.ColumnDefinitions>
            											<Grid.RowDefinitions>
            												<RowDefinition Height="Auto"/>
            												<RowDefinition Height="*"/>
            												<RowDefinition Height="Auto"/>
            											</Grid.RowDefinitions>
            											<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            											<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            											<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
            											<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
            											<Grid Grid.Column="1" Grid.Row="2">
            												<Grid.ColumnDefinitions>
            													<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            													<ColumnDefinition Width="*"/>
            												</Grid.ColumnDefinitions>
            												<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
            											</Grid>
            										</Grid>
            									</ControlTemplate>
            								</ScrollViewer.Template>
            								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            							</ScrollViewer>
            						</Border>
            					</ControlTemplate>
            				</Setter.Value>
            			</Setter>
            			<Style.Triggers>
            				<Trigger Property="IsGrouping" Value="true">
            					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            				</Trigger>
            			</Style.Triggers>
            		</Style>
         
            	</DataGrid.DropLocationIndicatorStyle>
                <DataGrid.Columns  >
                    <DataGridTextColumn Header="文件名" Binding="{Binding Name}" Width="400"  />
                    <DataGridTextColumn Header="曲名" Binding="{Binding Title}" Width="200"  />
                    <DataGridTextColumn Header="艺人" Binding="{Binding Artist}" Width="150" />
                    <DataGridTextColumn Header="专辑" Binding="{Binding Album}" Width="360" />
                </DataGrid.Columns>
            </DataGrid>
            <Button Content="Button" Height="31.304" Margin="0,11.818,76.217,0" Style="{DynamicResource btnadd}" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75.559" Click="btnadd_Click" />
            <Button Content="Button" Height="31.304" Margin="0,11.818,15.429,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="44.775" Click="btnclear_Click" />
            <Button Content="Button" Height="37" Margin="403.964,6.122,397.268,0" Style="{DynamicResource btnsongscount01}" VerticalAlignment="Top"/>
            <Label Content="" Style="{DynamicResource Labelcount}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,11.818,333.35,0" Background="#00000000" Foreground="White" FontSize="21.333" Width="94.69" Name="lbcount" />

        </Grid>
        <Grid Margin="0,46.003,65.625,134.997" HorizontalAlignment="Right" Width="1010.276" x:Name="mycd" Visibility="Hidden">
        	<Rectangle Fill="#A693D6D6" Stroke="#FF93D6D6" StrokeThickness="0">
        		<Rectangle.Effect>
        			<BlurEffect Radius="80"/>
        		</Rectangle.Effect>
        	</Rectangle>
        	<Rectangle Fill="#FF93D6D6" Stroke="#FF93D6D6" StrokeThickness="0" Margin="29.888,15.332,6.338,0" Height="135" VerticalAlignment="Top">
        		<Rectangle.Effect>
        			<BlurEffect Radius="80"/>
        		</Rectangle.Effect>
        	</Rectangle>
        	<StackPanel Height="135" Margin="29.888,15.332,0.134,0" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" CanHorizontallyScroll="True" Orientation="Horizontal">
                <Image HorizontalAlignment="Left" Height="117" Width="221" Source="Images/1.jpg" Margin="0,0,15,0" Stretch="UniformToFill"/>
                <Image Height="117" Margin="15,0" Source="Images/1.jpg" Stretch="UniformToFill" Width="221"/>
                <Image Height="117" Margin="15,0" Source="Images/1.jpg" Stretch="UniformToFill" HorizontalAlignment="Left" Width="221"/>
                <Image Height="117" Margin="15,0" Source="Images/1.jpg" Stretch="UniformToFill" HorizontalAlignment="Right" Width="221"/>
        	</StackPanel>
        	<Grid Margin="29.901,161.997,8,21.333">
        		<DataGrid   Margin="0,79.789,0,0" Background="#00F0F0F0" x:Name="datacd" CanUserAddRows="False" AutoGenerateColumns="False" EnableColumnVirtualization="True" Style="{DynamicResource DataGridStyle}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle2}" FontSize="14.667" RowStyle="{DynamicResource DataGridRowStyle2}" RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}" BorderBrush="{x:Null}" Foreground="#FF606060" GridLinesVisibility="None" IsReadOnly="True" MouseDoubleClick="datasongs_MouseDoubleClick" HorizontalScrollBarVisibility="Hidden" MaxColumnWidth="1000" MinColumnWidth="50" IsSynchronizedWithCurrentItem="True" HeadersVisibility="Column" CanUserReorderColumns="False">
        			<DataGrid.DragIndicatorStyle>
        				<Style TargetType="{x:Type DataGridColumnHeader}">
        					<Setter Property="VerticalContentAlignment" Value="Center"/>
        					<Setter Property="Template">
        						<Setter.Value>
        							<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
        								<Grid>
        									<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
        										<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        									</Microsoft_Windows_Themes:DataGridHeaderBorder>
        									<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
        									<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
        								</Grid>
        							</ControlTemplate>
        						</Setter.Value>
        					</Setter>
        				</Style>
         
        			</DataGrid.DragIndicatorStyle>
        			<DataGrid.ItemsPanel>
        				<ItemsPanelTemplate>
        					<DataGridRowsPresenter x:Name="PART_RowsPresenter" IsItemsHost="True"/>
        				</ItemsPanelTemplate>
         
        			</DataGrid.ItemsPanel>
        			<DataGrid.DropLocationIndicatorStyle>
        				<Style TargetType="{x:Type DataGrid}">
        					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        					<Setter Property="BorderBrush" Value="#FF688CAF"/>
        					<Setter Property="BorderThickness" Value="1"/>
        					<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        					<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        					<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        					<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        					<Setter Property="Template">
        						<Setter.Value>
        							<ControlTemplate TargetType="{x:Type DataGrid}">
        								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        									<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Foreground="#FFC04545">
        										<ScrollViewer.Template>
        											<ControlTemplate TargetType="{x:Type ScrollViewer}">
        												<Grid>
        													<Grid.ColumnDefinitions>
        														<ColumnDefinition Width="Auto"/>
        														<ColumnDefinition Width="*"/>
        														<ColumnDefinition Width="Auto"/>
        													</Grid.ColumnDefinitions>
        													<Grid.RowDefinitions>
        														<RowDefinition Height="Auto"/>
        														<RowDefinition Height="*"/>
        														<RowDefinition Height="Auto"/>
        													</Grid.RowDefinitions>
        													<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        													<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        													<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
        													<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
        													<Grid Grid.Column="1" Grid.Row="2">
        														<Grid.ColumnDefinitions>
        															<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        															<ColumnDefinition Width="*"/>
        														</Grid.ColumnDefinitions>
        														<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        													</Grid>
        												</Grid>
        											</ControlTemplate>
        										</ScrollViewer.Template>
        										<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        									</ScrollViewer>
        								</Border>
        							</ControlTemplate>
        						</Setter.Value>
        					</Setter>
        					<Style.Triggers>
        						<Trigger Property="IsGrouping" Value="true">
        							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        						</Trigger>
        					</Style.Triggers>
        				</Style>
         
        			</DataGrid.DropLocationIndicatorStyle>
        			<DataGrid.Columns  >
        				<DataGridTextColumn Header="曲名" Binding="{Binding Title}" Width="400"  />
        				<DataGridTextColumn Header="艺人" Binding="{Binding Artist}" Width="200" />
        				<DataGridTextColumn Header="专辑" Binding="{Binding Album}" Width="270" />
                        <DataGridTextColumn Header="年代" Binding="{Binding Year}" Width="110"></DataGridTextColumn>
        			</DataGrid.Columns>
        		</DataGrid>
        	</Grid>
        	<TextBox HorizontalAlignment="Left" Height="44.5" Margin="32.401,165.497,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="220.5" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF606060" SelectionBrush="White" FontSize="32" MaxLength="12" SelectionOpacity="0" Text="新建CD"/>
        	<Label Content="备注：" HorizontalAlignment="Left" Height="23.666" Margin="32.401,211.246,0,0" VerticalAlignment="Top" Width="41.197" Foreground="#FF606060"/>
        	<TextBox HorizontalAlignment="Left" Height="23.666" Margin="68.62,211.249,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="184.793" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF606060" SelectionBrush="White"/>
        	<Button Content="Button" HorizontalAlignment="Right" Height="36.499" Margin="0,201.369,110,0" Style="{DynamicResource Btncdplay}" VerticalAlignment="Top" Width="98"/>
        	<Button Content="Button" HorizontalAlignment="Right" Height="36.499" Margin="0,201.369,8,0" Style="{DynamicResource btncdjoin}" VerticalAlignment="Top" Width="98"/>
        	<Button Content="Button" HorizontalAlignment="Right" Height="27.916" Margin="0,161.997,8,0" Style="{DynamicResource btncddelete}" VerticalAlignment="Top" Width="60.667"/>

        </Grid>
        <Button HorizontalAlignment="Left" Height="65" Margin="116.878,0,0,17.497" Style="{DynamicResource go}" VerticalAlignment="Bottom" Width="65" x:Name="btngo" Click="btngo_Click" />
    	<Button Content="" HorizontalAlignment="Left" Height="30" Margin="211.336,0,0,35.172" Style="{DynamicResource for}" VerticalAlignment="Bottom" Width="60.5" x:Name="btnfor" Click="btnfor_Click" />
    	<Button Content="" HorizontalAlignment="Left" Height="30" Margin="25.501,0,0,35.425" Style="{DynamicResource back}" VerticalAlignment="Bottom" Width="60.5" x:Name="btnback" Click="btnback_Click" />
    	<Label Height="30" Margin="350.5,0,300.5,33.668" Style="{DynamicResource lbname}" VerticalAlignment="Bottom" x:Name="lbname" FontSize="26.667" Content="AnimeMusic" />
        <Slider Height="26" Margin="19.414,0,8.333,82.997" VerticalAlignment="Bottom" Style="{DynamicResource Slider-Sketch}" Background="#FF93D6D6" Foreground="#FF93D6D6" x:Name="musicsli"  BorderBrush="#FF606060" ValueChanged="musicsli_ValueChanged" />
        <Slider Maximum="1" LargeChange="0.1" SmallChange="0.1" Value="{Binding Volume, ElementName=media, Mode=TwoWay, UpdateSourceTrigger=Default}" HorizontalAlignment="Right" Height="22.831" Margin="0,0,128.503,38.672" VerticalAlignment="Bottom" Width="75" Style="{DynamicResource Slider-Sketch}" Background="#FF93D6D6"/>
        <Button Content="" HorizontalAlignment="Right" Height="29.251" Margin="0,0,204.041,35.584" Style="{DynamicResource btnvolume}" VerticalAlignment="Bottom" Width="41.042" x:Name="btnvolume" Click="btnvolume_Click" />
        <Button Content="" HorizontalAlignment="Left" Height="63.161" Margin="121.456,0,0,18.586" Style="{DynamicResource btnpause}" VerticalAlignment="Bottom" Width="47.25" x:Name="btnpause" Click="btnpause_Click" Visibility="Hidden" />
        <Button x:Name="btnoffg1" HorizontalAlignment="Left" Margin="-10.918,346.438,0,341.46" Style="{DynamicResource xianshi}" Width="39.068" Click="offg1_Click" />
        <Label  HorizontalAlignment="Right" Height="32" Margin="0,0,0,66.997" VerticalAlignment="Bottom" Width="66.417" BorderBrush="#FF93D6D6" Foreground="#FF93D6D6" FontSize="18.667" x:Name="musictime" Content="" />
        <Button Content="Button" HorizontalAlignment="Right" Height="65.04" Margin="0,210.925,7.347,0" Style="{DynamicResource btnmycd}" VerticalAlignment="Top" Width="57.636" x:Name="btnmycd" Click="btnmycd_Click" />
        <Button Content="" HorizontalAlignment="Right" Height="29.246" Margin="0,0,200.135,36" Style="{DynamicResource btnvolume x}" VerticalAlignment="Bottom" Width="44.948" x:Name="btnoffvolume" Click="btnoffvolume_Click" Visibility="Hidden" />
        <Button Content="Button" HorizontalAlignment="Right" Margin="0,307.524,7.347,336.563" Style="{DynamicResource btnsongsbox}" Width="57.636" x:Name="btnmysongs" Click="btnmysongs_Click" />
        <ScrollBar HorizontalAlignment="Right" Margin="0,-24,-108.333,0" Width="13.667" Height="178.667" VerticalAlignment="Top" Visibility="Collapsed">
        	<ScrollBar.Background>
        		<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
        			<GradientStop Color="#FFE1E1E1" Offset="0"/>
        			<GradientStop Color="#FFEDEDED"/>
        			<GradientStop Color="#FFEDEDED"/>
        			<GradientStop Color="White"/>
        		</LinearGradientBrush>
        	</ScrollBar.Background>
        </ScrollBar>
        <Button Content="Button" HorizontalAlignment="Right" Height="56.21" Margin="0,0,5.335,249.788" Style="{DynamicResource btnhome}" VerticalAlignment="Bottom" Width="58.071" Name="btnhome" Click="btnhome_Click" />
    </Grid>
</Window>
