<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:pc="http://schemas.microsoft.com/prototyping/2010/controls" 
    mc:Ignorable="d" 
    x:Class="AnimeBox.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
         
    	<ResourceDictionary>
    		<ResourceDictionary.MergedDictionaries>
    			<ResourceDictionary Source="SketchStyles.xaml"/>
    		</ResourceDictionary.MergedDictionaries>
         
    		<Style x:Key="go" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00E24646">
        
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="25"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed">
    										<Storyboard>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.KernelType)" Storyboard.TargetName="regularPolygon">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static KernelType.Gaussian}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="22"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
        
    							<ed:RegularPolygon InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" RenderTransformOrigin="0.5,0.5" StrokeThickness="12">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<ed:RegularPolygon x:Name="regularPolygon" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" RenderTransformOrigin="0.5,0.5" StrokeThickness="12">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="for" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00D43434">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="12"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon1">
    												<EasingDoubleKeyFrame KeyTime="0" Value="12"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon1">
    												<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<ed:RegularPolygon HorizontalAlignment="Left" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ed:RegularPolygon HorizontalAlignment="Right" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<ed:RegularPolygon x:Name="regularPolygon" HorizontalAlignment="Right" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ed:RegularPolygon x:Name="regularPolygon1" HorizontalAlignment="Left" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" Width="30" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnmin" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid RenderTransformOrigin="0.5,0.5" Margin="0,-0.021,0,0" Background="#00000000">
    							<Grid.RenderTransform>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform AngleX="-0.488"/>
    									<RotateTransform/>
    									<TranslateTransform X="0.023"/>
    								</TransformGroup>
    							</Grid.RenderTransform>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Rectangle Stroke="#FF93D6D6" StrokeThickness="3" Fill="#00C43535" Height="5.957" VerticalAlignment="Bottom"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Rectangle x:Name="rectangle" Stroke="#FF93D6D6" StrokeThickness="3" Fill="#00C43535" Height="5.957" VerticalAlignment="Bottom">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="xianshi" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="15"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<ed:RegularPolygon Fill="#FF93D6D6" InnerRadius="1" PointCount="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="0">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<ed:RegularPolygon x:Name="regularPolygon" Fill="#FF93D6D6" InnerRadius="1" PointCount="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="0">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="add" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00873838">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="ellipse">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Ellipse Stroke="#FF93D6D6" StrokeThickness="5"/>
    							<Rectangle Margin="8.822,15.625,8.823,16.167" Stroke="#FF93D6D6" Fill="#FF93D6D6" StrokeThickness="0"/>
    							<Rectangle Margin="8.706,15.807,8.702,15.319" Stroke="#FF93D6D6" Fill="#FF93D6D6" StrokeThickness="0" RenderTransformOrigin="0.5,0.5">
    								<Rectangle.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</Rectangle.RenderTransform>
    							</Rectangle>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Ellipse x:Name="ellipse" Stroke="#FF93D6D6" StrokeThickness="5">
    								<Ellipse.Effect>
    									<BlurEffect/>
    								</Ellipse.Effect>
    							</Ellipse>
    							<Rectangle Margin="8.822,15.625,8.823,16.167" Stroke="#FF93D6D6" Fill="#FF93D6D6" StrokeThickness="0">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle Margin="8.69,15.791,8.685,15.335" Stroke="#FF93D6D6" Fill="#FF93D6D6" StrokeThickness="0" RenderTransformOrigin="0.5,0.5">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    								<Rectangle.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</Rectangle.RenderTransform>
    							</Rectangle>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="dele" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00DE1A1A">
    							<Rectangle HorizontalAlignment="Left" Margin="2.062,9.693,0,0" Stroke="#FF93D6D6" Width="4.305"/>
    							<Rectangle HorizontalAlignment="Left" Margin="6.379,9.693,0,0" Stroke="#FF93D6D6" Width="4.306"/>
    							<Rectangle HorizontalAlignment="Right" Margin="0,9.692,11.058,0.001" Stroke="#FF93D6D6" Width="4.306"/>
    							<Rectangle HorizontalAlignment="Right" Margin="0,9.692,6.718,0.001" Stroke="#FF93D6D6" Width="4.306"/>
    							<Rectangle Height="3.859" Margin="0,4.81,0,0" Stroke="#FF93D6D6" VerticalAlignment="Top" StrokeThickness="3"/>
    							<Rectangle Height="8.669" Margin="11.186,0,10.792,0" Stroke="#FF93D6D6" StrokeThickness="2" VerticalAlignment="Top"/>
    							<Rectangle HorizontalAlignment="Right" Margin="0,9.692,2.386,0.001" Stroke="#FF93D6D6" Width="4.314"/>
    							<Rectangle HorizontalAlignment="Left" Margin="10.685,9.692,0,0.001" Stroke="#FF93D6D6" Width="4.306"/>
    							<Rectangle Margin="15.022,9.693,15.364,0" Stroke="#FF93D6D6"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="volume" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<Rectangle Margin="1,17.276,17.017,16.797" Stroke="#FF93D6D6" StrokeThickness="14"/>
    							<Path Data="M792.08333,756.5 L803.61424,744.96909" Height="19.011" Margin="21.316,1.666,0.828,0" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="4" VerticalAlignment="Top"/>
    							<Path Data="M791.83333,772.33333 L803.79232,784.29232" Height="19.148" Margin="19.462,0,0,1.75" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="4" VerticalAlignment="Bottom"/>
    							<Path Data="M804.614,743.969 L804.614,785.29238" HorizontalAlignment="Right" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="4" Width="4.284"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Rectangle HorizontalAlignment="Right" Margin="0,9.197,0.851,9.38" Stroke="#FF93D6D6" StrokeThickness="14" Width="12.166"/>
    							<Rectangle HorizontalAlignment="Right" Margin="0,14.084,10.417,13.661" Stroke="#FF93D6D6" StrokeThickness="14" Width="7.916"/>
    							<Rectangle HorizontalAlignment="Right" Height="3.25" Margin="0,0,3.083,7.244" Stroke="#FF93D6D6" StrokeThickness="14" VerticalAlignment="Bottom" Width="4.25"/>
    							<Rectangle HorizontalAlignment="Right" Height="3.167" Margin="0,6.833,3.083,0" Stroke="#FF93D6D6" StrokeThickness="14" VerticalAlignment="Top" Width="4.25"/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnpause" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00B44E4E">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle">
    												<EasingDoubleKeyFrame KeyTime="0" Value="12"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle1">
    												<EasingDoubleKeyFrame KeyTime="0" Value="12"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Rectangle Fill="#FF93D6D6" HorizontalAlignment="Left" Width="17"/>
    							<Rectangle Fill="#FF93D6D6" HorizontalAlignment="Right" Width="17"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Rectangle x:Name="rectangle" Fill="#FF93D6D6" HorizontalAlignment="Left" Width="17">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle x:Name="rectangle1" Fill="#FF93D6D6" HorizontalAlignment="Right" Width="17">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnvolume" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00EB3535">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.KernelType)" Storyboard.TargetName="rectangle">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static KernelType.Gaussian}"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.KernelType)" Storyboard.TargetName="regularPolygon">
    												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static KernelType.Gaussian}"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Rectangle Margin="0,3.545,18.375,4" Stroke="#FF93D6D6" StrokeThickness="14"/>
    							<ed:RegularPolygon InnerRadius="1" Margin="8.875,-0.434,1.125,0.439" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="3" RenderTransformOrigin="0.5,0.5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="-90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Rectangle x:Name="rectangle" Margin="0,3.545,18.375,4" Stroke="#FF93D6D6" StrokeThickness="14">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<ed:RegularPolygon x:Name="regularPolygon" InnerRadius="1" Margin="8.875,-0.434,1.125,0.439" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="3" RenderTransformOrigin="0.5,0.5">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="-90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnimage" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00E24040">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<ed:RegularPolygon Fill="#FF93D6D6" InnerRadius="1" PointCount="4" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="45"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<ed:RegularPolygon x:Name="regularPolygon" Fill="#FF93D6D6" InnerRadius="1" PointCount="4" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="45"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btndelete" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00682424">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="ellipse">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Ellipse Fill="#00F4F4F5" Stroke="#FF93D6D6" StrokeThickness="5"/>
    							<Path Data="M-104.1875,546.5625 L-88.881124,561.86888" Fill="#00F4F4F5" Margin="7.66,7.562,7.376,7.631" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="5"/>
    							<Path Data="M-89,545.5625 L-105.34736,561.90986" Fill="#00F4F4F5" Margin="7.66,7.562,7.492,7.59" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="5"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Ellipse x:Name="ellipse" Fill="#00F4F4F5" Stroke="#FF93D6D6" StrokeThickness="5">
    								<Ellipse.Effect>
    									<BlurEffect/>
    								</Ellipse.Effect>
    							</Ellipse>
    							<Path Data="M-104.1875,546.5625 L-88.881124,561.86888" Fill="#00F4F4F5" Margin="7.66,7.562,7.376,7.631" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="5">
    								<Path.Effect>
    									<BlurEffect/>
    								</Path.Effect>
    							</Path>
    							<Path Data="M-89,545.5625 L-105.34736,561.90986" Fill="#00F4F4F5" Margin="7.66,7.562,7.492,7.59" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="5">
    								<Path.Effect>
    									<BlurEffect/>
    								</Path.Effect>
    							</Path>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnclear" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="ellipse_Copy">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Ellipse x:Name="ellipse" Fill="#00F4F4F5" Stroke="#FF93D6D6" StrokeThickness="5"/>
    							<Path Data="M-204.125,297.5 L-186.06207,297.5" Fill="#00F4F4F5" Height="3" Margin="6.206,10.945,6.228,0" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="3" VerticalAlignment="Top"/>
    							<Rectangle Fill="#00F4F4F5" Height="5.082" Margin="14.738,8.55,14.533,0" Stroke="#FF93D6D6" VerticalAlignment="Top"/>
    							<Rectangle Fill="#00F4F4F5" Margin="9.564,14.546,9.748,9.81" Stroke="#FF93D6D6" StrokeThickness="6"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Ellipse x:Name="ellipse_Copy" Fill="#00F4F4F5" Stroke="#FF93D6D6" StrokeThickness="5">
    								<Ellipse.Effect>
    									<BlurEffect/>
    								</Ellipse.Effect>
    							</Ellipse>
    							<Path Data="M-204.125,297.5 L-186.06207,297.5" Fill="#00F4F4F5" Height="3" Margin="6.206,10.945,6.228,0" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="3" VerticalAlignment="Top">
    								<Path.Effect>
    									<BlurEffect/>
    								</Path.Effect>
    							</Path>
    							<Rectangle Fill="#00F4F4F5" Height="5.082" Margin="14.738,8.55,14.533,0" Stroke="#FF93D6D6" VerticalAlignment="Top">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle Fill="#00F4F4F5" Margin="9.564,14.546,9.748,9.81" Stroke="#FF93D6D6" StrokeThickness="6">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnvolume x" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00BC4D4D">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="path">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="path1">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Rectangle Margin="0,3.979,22.28,3.561" Stroke="#FF93D6D6" StrokeThickness="14"/>
    							<ed:RegularPolygon InnerRadius="1" Margin="8.875,0,5.03,0" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="3" RenderTransformOrigin="0.5,0.5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="-90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<Path Data="M873.5,714.83333 L841.29903,747.03431" HorizontalAlignment="Right" Margin="0,4.296,0,5.572" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="2" Width="14.284"/>
    							<Path Data="M856,716.666 L875.959,745" HorizontalAlignment="Right" Margin="0,4.946,0,4.806" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="2" Width="14.284"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Rectangle x:Name="rectangle" Margin="0,3.979,22.28,3.561" Stroke="#FF93D6D6" StrokeThickness="14">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<ed:RegularPolygon x:Name="regularPolygon" InnerRadius="1" Margin="8.875,0,5.03,0" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="3" RenderTransformOrigin="0.5,0.5">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="-90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<Path x:Name="path" Data="M873.5,714.83333 L841.29903,747.03431" HorizontalAlignment="Right" Margin="0,4.296,0,5.572" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="2" Width="14.284">
    								<Path.Effect>
    									<BlurEffect/>
    								</Path.Effect>
    							</Path>
    							<Path x:Name="path1" Data="M856,716.666 L875.959,745" HorizontalAlignment="Right" Margin="0,4.946,0,4.806" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="2" Width="14.284">
    								<Path.Effect>
    									<BlurEffect/>
    								</Path.Effect>
    							</Path>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnsongsbox" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00000000">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle">
    												<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle1">
    												<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle2">
    												<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle3">
    												<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle4">
    												<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle5">
    												<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label1_Copy">
    												<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="播放列表" Height="26.75" HorizontalAlignment="Left" Margin="0,29.163,0,0" x:Name="label1" VerticalAlignment="Top" Width="58.333" Foreground="#FF93D6D6" />
    							<Rectangle Fill="#FF93D6D6" HorizontalAlignment="Left" Height="10" Margin="8.125,11.333,0,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top" Width="10"/>
    							<Rectangle Fill="#FF93D6D6" Height="10" Margin="19.75,11.333,8.583,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top"/>
    							<Rectangle Fill="#FF93D6D6" HorizontalAlignment="Left" Margin="8.125,22.583,0,23.33" Stroke="#FF93D6D6" StrokeThickness="0" Width="10"/>
    							<Rectangle Fill="#FF93D6D6" Margin="19.75,22.583,8.583,23.33" Stroke="#FF93D6D6" StrokeThickness="0"/>
    							<Rectangle Fill="#FF93D6D6" HorizontalAlignment="Left" Height="10" Margin="8.125,0,0,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top" Width="10"/>
    							<Rectangle Fill="#FF93D6D6" Height="10" Margin="19.75,0,8.583,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Rectangle x:Name="rectangle" Fill="#FF93D6D6" HorizontalAlignment="Left" Height="10" Margin="8.125,11.333,0,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top" Width="10">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle x:Name="rectangle1" Fill="#FF93D6D6" Height="10" Margin="19.75,11.333,8.583,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle x:Name="rectangle2" Fill="#FF93D6D6" HorizontalAlignment="Left" Margin="8.125,22.583,0,23.33" Stroke="#FF93D6D6" StrokeThickness="0" Width="10">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle x:Name="rectangle3" Fill="#FF93D6D6" Margin="19.75,22.583,8.583,23.33" Stroke="#FF93D6D6" StrokeThickness="0">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle x:Name="rectangle4" Fill="#FF93D6D6" HorizontalAlignment="Left" Height="10" Margin="8.125,0,0,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top" Width="10">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Rectangle x:Name="rectangle5" Fill="#FF93D6D6" Height="10" Margin="19.75,0,8.583,0" Stroke="#FF93D6D6" StrokeThickness="0" VerticalAlignment="Top">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<Label Content="播放列表" Height="26.75" HorizontalAlignment="Left" Margin="0,29.163,0,0" x:Name="label1_Copy" VerticalAlignment="Top" Width="58.333" Foreground="#FF93D6D6" >
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="lbname" TargetType="{x:Type Label}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Label}">
    						<Grid HorizontalAlignment="Center">
    							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center"/>
    							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center">
    								<ContentPresenter.Effect>
    									<BlurEffect Radius="11"/>
    								</ContentPresenter.Effect>
    							</ContentPresenter>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    			<Setter Property="FontFamily" Value="SketchFlow Print"/>
    			<Setter Property="FontSize" Value="29"/>
    			<Setter Property="Foreground" Value="#FF93D6D6"/>
    		</Style>
    		<Style x:Key="btnminipause" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00000000">
    							<Rectangle Fill="#FFDEDEDE" HorizontalAlignment="Left" Width="7.526"/>
    							<Rectangle Fill="#FFDEDEDE" HorizontalAlignment="Right" Width="7.526"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnminiplay" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00B43333">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver"/>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<ed:RegularPolygon InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FFDEDEDE" RenderTransformOrigin="0.5,0.5" StrokeThickness="12">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnmininext" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00AD3737">
    							<ed:RegularPolygon HorizontalAlignment="Left" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FFDEDEDE" Width="10.166" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ed:RegularPolygon HorizontalAlignment="Right" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FFDEDEDE" Width="10.167" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnminiback" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00CA3333">
    							<ed:RegularPolygon HorizontalAlignment="Left" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FFDEDEDE" Width="10.166" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="270"/>
    										<TranslateTransform X="10.252"/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ed:RegularPolygon HorizontalAlignment="Right" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="#FFDEDEDE" Width="10.167" RenderTransformOrigin="0.5,0.5" StrokeThickness="5">
    								<ed:RegularPolygon.RenderTransform>
    									<TransformGroup>
    										<ScaleTransform/>
    										<SkewTransform/>
    										<RotateTransform Angle="270"/>
    										<TranslateTransform X="-10.252"/>
    									</TransformGroup>
    								</ed:RegularPolygon.RenderTransform>
    							</ed:RegularPolygon>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnopenmini" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00000000">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="ellipse">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Ellipse Fill="#FF93D6D6"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Ellipse x:Name="ellipse" Fill="#FF93D6D6">
    								<Ellipse.Effect>
    									<BlurEffect/>
    								</Ellipse.Effect>
    							</Ellipse>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnmycd" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00952929">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label">
    												<EasingDoubleKeyFrame KeyTime="0" Value="15"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="ellipse">
    												<EasingDoubleKeyFrame KeyTime="0" Value="15"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="我的专辑" Foreground="#FF93D6D6" FontSize="12" Height="24.21" VerticalAlignment="Bottom"/>
    							<Ellipse StrokeThickness="15" Stroke="#FF93D6D6" Margin="5.583,0,9.876,22.874"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Label x:Name="label" Content="我的专辑" Foreground="#FF93D6D6" FontSize="12" Height="24.21" VerticalAlignment="Bottom" Margin="0">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    							<Ellipse x:Name="ellipse" StrokeThickness="15" Stroke="#FF93D6D6" Margin="5.583,0,9.876,22.874">
    								<Ellipse.Effect>
    									<BlurEffect/>
    								</Ellipse.Effect>
    							</Ellipse>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
    							<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsMouseOver" Value="True">
    								<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
    							</Trigger>
    							<Trigger Property="IsPressed" Value="True">
    								<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
    							</Trigger>
    							<Trigger Property="IsEnabled" Value="False">
    								<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
    			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    			<Setter Property="BorderBrush" Value="#FF688CAF"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type DataGrid}">
    						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
    							<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
    								<ScrollViewer.Template>
    									<ControlTemplate TargetType="{x:Type ScrollViewer}">
    										<Grid>
    											<Grid.ColumnDefinitions>
    												<ColumnDefinition Width="Auto"/>
    												<ColumnDefinition Width="*"/>
    												<ColumnDefinition Width="Auto"/>
    											</Grid.ColumnDefinitions>
    											<Grid.RowDefinitions>
    												<RowDefinition Height="Auto"/>
    												<RowDefinition Height="*"/>
    												<RowDefinition Height="Auto"/>
    											</Grid.RowDefinitions>
    											<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
    											<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
    											<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
    											<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
    											<Grid Grid.Column="1" Grid.Row="2">
    												<Grid.ColumnDefinitions>
    													<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
    													<ColumnDefinition Width="*"/>
    												</Grid.ColumnDefinitions>
    												<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
    											</Grid>
    										</Grid>
    									</ControlTemplate>
    								</ScrollViewer.Template>
    								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    							</ScrollViewer>
    						</Border>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    			<Style.Triggers>
    				<Trigger Property="IsGrouping" Value="true">
    					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    				</Trigger>
    			</Style.Triggers>
    		</Style>
    		<SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
    		<Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="BorderBrush" Value="Transparent"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type DataGridCell}">
    						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#00606060" SnapsToDevicePixels="True">
    							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    						</Border>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    			<Style.Triggers>
    				<Trigger Property="IsSelected" Value="True">
    					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
    					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    				</Trigger>
    				<Trigger Property="IsKeyboardFocusWithin" Value="True">
    					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
    				</Trigger>
    			</Style.Triggers>
    		</Style>
    		<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    			<Setter Property="Width" Value="8"/>
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="Cursor" Value="SizeWE"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Thumb}">
    						<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="DataGridColumnHeaderStyle2" TargetType="{x:Type DataGridColumnHeader}">
    			<Setter Property="VerticalContentAlignment" Value="Center"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver"/>
    									<VisualState x:Name="Pressed"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Background="#FF93D6D6">
    								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    							</Microsoft_Windows_Themes:DataGridHeaderBorder>
    							<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Width="2.25" Background="#00DEDEDE"/>
    							<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Background="White" Width="3.75"/>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="DataGridRowStyle2" TargetType="{x:Type DataGridRow}">
    			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    			<Setter Property="SnapsToDevicePixels" Value="true"/>
    			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    			<Setter Property="ValidationErrorTemplate">
    				<Setter.Value>
    					<ControlTemplate>
    						<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type DataGridRow}">
    						<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#00AF3333" SnapsToDevicePixels="True">
    							<SelectiveScrollingGrid>
    								<SelectiveScrollingGrid.ColumnDefinitions>
    									<ColumnDefinition Width="Auto"/>
    									<ColumnDefinition Width="*"/>
    								</SelectiveScrollingGrid.ColumnDefinitions>
    								<SelectiveScrollingGrid.RowDefinitions>
    									<RowDefinition Height="*"/>
    									<RowDefinition Height="Auto"/>
    								</SelectiveScrollingGrid.RowDefinitions>
    								<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    								<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
    							</SelectiveScrollingGrid>
    						</Border>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
    		<Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    			<Setter Property="Height" Value="8"/>
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="Cursor" Value="SizeNS"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Thumb}">
    						<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="DataGridRowHeaderStyle1" TargetType="{x:Type DataGridRowHeader}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
    						<Grid>
    							<Microsoft_Windows_Themes:DataGridHeaderBorder BorderThickness="{TemplateBinding BorderThickness}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" BorderBrush="#FFCE3A3A">
    								<StackPanel Orientation="Horizontal">
    									<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
    									<Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
    								</StackPanel>
    							</Microsoft_Windows_Themes:DataGridHeaderBorder>
    							<Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top" Foreground="#FFD22C2C" Background="#00B43030"/>
    							<Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom" Background="#FFCC3D3D"/>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
    			<GradientStop Color="#E1E1E1" Offset="0"/>
    			<GradientStop Color="#EDEDED" Offset="0.20"/>
    			<GradientStop Color="#EDEDED" Offset="0.80"/>
    			<GradientStop Color="#E3E3E3" Offset="1"/>
    		</LinearGradientBrush>
    		<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
    		<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    			<Setter Property="OverridesDefaultStyle" Value="true"/>
    			<Setter Property="Focusable" Value="false"/>
    			<Setter Property="IsTabStop" Value="false"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type RepeatButton}">
    						<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    			<Setter Property="OverridesDefaultStyle" Value="true"/>
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="Focusable" Value="false"/>
    			<Setter Property="IsTabStop" Value="false"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type RepeatButton}">
    						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    			<Setter Property="OverridesDefaultStyle" Value="true"/>
    			<Setter Property="IsTabStop" Value="false"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Thumb}">
    						<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
    			<GradientStop Color="#E1E1E1" Offset="0"/>
    			<GradientStop Color="#EDEDED" Offset="0.20"/>
    			<GradientStop Color="#EDEDED" Offset="0.80"/>
    			<GradientStop Color="#E3E3E3" Offset="1"/>
    		</LinearGradientBrush>
    		<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    			<Setter Property="OverridesDefaultStyle" Value="true"/>
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="Focusable" Value="false"/>
    			<Setter Property="IsTabStop" Value="false"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type RepeatButton}">
    						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style TargetType="{x:Type ScrollBar}">
    			<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
    			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ScrollBar}">
    						<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    							<Grid.RowDefinitions>
    								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
    								<RowDefinition Height="0.00001*"/>
    								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
    							</Grid.RowDefinitions>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="repeatButton">
    												<EasingDoubleKeyFrame KeyTime="0" Value="12"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="0" Grid.RowSpan="3">
    								<Track.IncreaseRepeatButton>
    									<RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" Margin="0,-8,0,0" Background="#FF93D6D6">
    										<RepeatButton.Effect>
    											<BlurEffect Radius="5" KernelType="Gaussian"/>
    										</RepeatButton.Effect>
    									</RepeatButton>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb HorizontalAlignment="Stretch" Height="Auto" Margin="0,0,0,-2.832" Style="{DynamicResource Thumb-Sketch}" VerticalAlignment="Stretch" Width="Auto"/>
    								</Track.Thumb>
    							</Track>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsEnabled" Value="false">
    								<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    			<Style.Triggers>
    				<Trigger Property="Orientation" Value="Horizontal">
    					<Setter Property="Width" Value="Auto"/>
    					<Setter Property="MinWidth" Value="0"/>
    					<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    					<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    					<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
    					<Setter Property="Template">
    						<Setter.Value>
    							<ControlTemplate TargetType="{x:Type ScrollBar}">
    								<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
    										<ColumnDefinition Width="0.00001*"/>
    										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
    									</Grid.ColumnDefinitions>
    									<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
    									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
    										<Track.DecreaseRepeatButton>
    											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
    										</Track.DecreaseRepeatButton>
    										<Track.IncreaseRepeatButton>
    											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
    										</Track.IncreaseRepeatButton>
    										<Track.Thumb>
    											<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
    										</Track.Thumb>
    									</Track>
    									<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
    								</Grid>
    								<ControlTemplate.Triggers>
    									<Trigger Property="IsEnabled" Value="false">
    										<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
    									</Trigger>
    								</ControlTemplate.Triggers>
    							</ControlTemplate>
    						</Setter.Value>
    					</Setter>
    				</Trigger>
    			</Style.Triggers>
    		</Style>
    		<Style x:Key="Btncdplay" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="立刻播放" Foreground="White" FontSize="21.333"/>
    							<Label x:Name="label" Content="立刻播放" Foreground="White" Background="#00DEDEDE" FontSize="21.333">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btncdjoin" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="加入列表" Foreground="White" FontSize="21.333"/>
    							<Label x:Name="label" Content="加入列表" Foreground="White" Background="#00DEDEDE" FontSize="21.333">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btncddelete" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="删除CD" Foreground="White" FontSize="14.667"/>
    							<Label x:Name="label" Content="删除CD" Foreground="White" Background="#00DEDEDE" FontSize="14.667">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>

    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnhome" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00C86C6C">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label1_Copy">
    												<EasingDoubleKeyFrame KeyTime="0" Value="15"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle">
    												<EasingDoubleKeyFrame KeyTime="0" Value="15"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="regularPolygon">
    												<EasingDoubleKeyFrame KeyTime="0" Value="15"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="rectangle1">
    												<EasingDoubleKeyFrame KeyTime="0" Value="15"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="主页歌词" Height="25.083" HorizontalAlignment="Left" Margin="0,31.127,0,0" x:Name="label1" VerticalAlignment="Top" Width="58.071" Foreground="#FF93D6D6" />
    							<Rectangle Margin="11.605,14.255,14.625,22.161" Stroke="#FF93D6D6" StrokeThickness="0" Fill="#FF93D6D6"/>
    							<ed:RegularPolygon Height="15.25" InnerRadius="1" Margin="10.603,0.005,13.551,0" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="5" VerticalAlignment="Top" Fill="#FF93D6D6"/>
    							<Rectangle Fill="#FF93D6D6" HorizontalAlignment="Left" Height="11.55" Margin="13.014,0,0,0" Stroke="#FF93D6D6" StrokeThickness="5" VerticalAlignment="Top" Width="6.728"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Label Content="主页歌词" Height="25.083" HorizontalAlignment="Left" Margin="0,31.127,0,0" x:Name="label1_Copy" VerticalAlignment="Top" Width="58.071" Foreground="#FF93D6D6" >
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    							<Rectangle x:Name="rectangle" Margin="11.605,14.255,14.625,22.161" Stroke="#FF93D6D6" StrokeThickness="0" Fill="#FF93D6D6">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    							<ed:RegularPolygon x:Name="regularPolygon" Height="15.25" InnerRadius="1" Margin="10.603,0.005,13.551,0" PointCount="3" Stretch="Fill" Stroke="#FF93D6D6" StrokeThickness="5" VerticalAlignment="Top" Fill="#FF93D6D6">
    								<ed:RegularPolygon.Effect>
    									<BlurEffect/>
    								</ed:RegularPolygon.Effect>
    							</ed:RegularPolygon>
    							<Rectangle x:Name="rectangle1" Fill="#FF93D6D6" HorizontalAlignment="Left" Height="11.55" Margin="13.014,0,0,0" Stroke="#FF93D6D6" StrokeThickness="5" VerticalAlignment="Top" Width="6.728">
    								<Rectangle.Effect>
    									<BlurEffect/>
    								</Rectangle.Effect>
    							</Rectangle>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnsongscount01" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid Background="#00C63636">
    							<Label Content="播放列表中的歌曲共有：" Foreground="White" FontSize="16"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Label Content="播放列表中的歌曲共有：" Foreground="White" FontSize="16">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="btnadd" TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="添加歌曲" Foreground="White" FontSize="16"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Label x:Name="label" Content="添加歌曲" Foreground="White" FontSize="16">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style TargetType="{x:Type Button}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
    						<Grid>
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates">
    									<VisualStateGroup.Transitions>
    										<VisualTransition GeneratedDuration="0:0:0.2"/>
    									</VisualStateGroup.Transitions>
    									<VisualState x:Name="Normal"/>
    									<VisualState x:Name="MouseOver">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)" Storyboard.TargetName="label">
    												<EasingDoubleKeyFrame KeyTime="0" Value="11"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualState>
    									<VisualState x:Name="Pressed"/>
    									<VisualState x:Name="Disabled"/>
    								</VisualStateGroup>
    							</VisualStateManager.VisualStateGroups>
    							<Label Content="清空" Foreground="White" FontSize="16"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Label x:Name="label" Content="清空" Foreground="White" FontSize="16">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    						</Grid>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsFocused" Value="True"/>
    							<Trigger Property="IsDefaulted" Value="True"/>
    							<Trigger Property="IsMouseOver" Value="True"/>
    							<Trigger Property="IsPressed" Value="True"/>
    							<Trigger Property="IsEnabled" Value="False"/>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="lasongscont" TargetType="{x:Type Label}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Label}">
    						<Grid>
    							<Label Content="" Foreground="White" FontSize="16"/>
    							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
    							<Label Content="" Foreground="White" FontSize="16">
    								<Label.Effect>
    									<BlurEffect/>
    								</Label.Effect>
    							</Label>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="Labelcount" TargetType="{x:Type Label}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Label}">
    						<Grid HorizontalAlignment="Left">
    							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left"/>
    							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left">
    								<ContentPresenter.Effect>
    									<BlurEffect Radius="11"/>
    								</ContentPresenter.Effect>
    							</ContentPresenter>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    			<Setter Property="FontFamily" Value="SketchFlow Print"/>
    			<Setter Property="FontSize" Value="29"/>
    			<Setter Property="Foreground" Value="#FF93D6D6"/>
    		</Style>
         
    	</ResourceDictionary>
         
    </Application.Resources>
</Application>
